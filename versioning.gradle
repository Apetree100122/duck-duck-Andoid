ext {

    buildVersionCode = {
        def versionName = getVersionName()
        def (major, minor, patch) = versionName.toLowerCase().tokenize('.')
        (major, minor, patch) = [major, minor, patch].collect { it.toInteger() }
        (major * 10_000_000) + (minor * 10_000) + (patch * 1_000) + buildNumberCode()
    }

    getVersionName = {
        def props = new Properties()
        file("version/version.properties").withInputStream { props.load(it) }
        return props.getProperty("VERSION")
    }

    getVersionNameSuffix = {
        if (project.hasProperty("versionNameSuffix")) {
            return project["versionNameSuffix"]
        } else {
            return ""
        }
    }

    buildVersionName = {
        return getVersionName() + "." + buildNumberCode() + getVersionNameSuffix()
    }

    buildNumberCode = {
        filePath = "${CI_HOME_DIR}/build_number.properties"
        if(!new File(filePath).exists()) return 0
        def props = new Properties()
        props.load(new FileInputStream(filePath))
        buildNumber = props["build"]
        if (buildNumber == null) return 0 else return Integer.valueOf(buildNumber)
    }
}